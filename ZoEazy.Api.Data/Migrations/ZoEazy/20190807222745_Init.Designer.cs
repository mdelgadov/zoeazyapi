// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZoEazy.Api.Data;

namespace ZoEazy.Api.Data.Migrations.ZoEazy
{
    [DbContext(typeof(ZoeazyDbContext))]
    [Migration("20190807222745_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<Guid>("UserId");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Description")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .HasMaxLength(8);

                    b.Property<bool?>("Active");

                    b.Property<DateTimeOffset>("ActiveUtc");

                    b.Property<string>("AppName");

                    b.Property<int>("BankAccountType");

                    b.Property<int>("CustomerType");

                    b.Property<bool?>("Deleted");

                    b.Property<DateTimeOffset>("DeletedUtc");

                    b.Property<bool?>("Executed");

                    b.Property<DateTimeOffset>("ExecutedUtc");

                    b.Property<int>("Franchise_Id");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<bool?>("Proposed");

                    b.Property<DateTimeOffset>("ProposedUtc");

                    b.Property<double?>("Radius");

                    b.Property<int>("Redirection");

                    b.Property<string>("Routing")
                        .HasMaxLength(9);

                    b.Property<string>("RoutingJson");

                    b.Property<string>("Secret");

                    b.Property<int>("State");

                    b.Property<string>("StripeCustomerId");

                    b.Property<int?>("Unit");

                    b.Property<string>("Url");

                    b.Property<double?>("Zoom");

                    b.HasKey("Id");

                    b.HasIndex("Franchise_Id");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.BranchAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apartment");

                    b.Property<int>("Branch_Id");

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<string>("Geological");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int?>("State_Id");

                    b.Property<string>("Street")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Branch_Id")
                        .IsUnique();

                    b.HasIndex("State_Id");

                    b.ToTable("BranchAddresses");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.BranchFax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AndPhone");

                    b.Property<int>("Branch_Id");

                    b.Property<bool?>("Deleted");

                    b.Property<DateTimeOffset>("DeletedUtc");

                    b.Property<string>("Number");

                    b.HasKey("Id");

                    b.HasIndex("Branch_Id");

                    b.ToTable("BranchFaxes");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.BranchOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Branch_Id");

                    b.Property<bool>("Cancelled");

                    b.Property<DateTimeOffset>("CancelledUtc");

                    b.Property<bool>("Executed");

                    b.Property<DateTimeOffset>("ExecutedUtc");

                    b.Property<bool>("Proposed");

                    b.Property<DateTimeOffset>("ProposedUtc");

                    b.Property<int>("SubscriberCreditCard_Id");

                    b.HasKey("Id");

                    b.HasIndex("Branch_Id");

                    b.HasIndex("SubscriberCreditCard_Id");

                    b.ToTable("BranchOrders");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.BranchOrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchOrder_Id");

                    b.Property<decimal>("Charge");

                    b.Property<string>("Concept");

                    b.Property<int>("Currency_Id");

                    b.Property<decimal>("Discount");

                    b.Property<int>("Period_Id");

                    b.Property<int>("Plan_Id");

                    b.HasKey("Id");

                    b.HasIndex("BranchOrder_Id")
                        .IsUnique();

                    b.HasIndex("Currency_Id");

                    b.HasIndex("Period_Id");

                    b.HasIndex("Plan_Id");

                    b.ToTable("BranchOrderItems");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.BranchOrderService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchOrder_Id");

                    b.Property<decimal>("Charge");

                    b.Property<string>("Concept");

                    b.Property<int>("Currency_Id");

                    b.Property<decimal>("Discount");

                    b.Property<int>("MonthsFree");

                    b.Property<int>("Plan_Id");

                    b.Property<int>("Service_Id");

                    b.HasKey("Id");

                    b.HasIndex("BranchOrder_Id");

                    b.HasIndex("Currency_Id");

                    b.HasIndex("Plan_Id");

                    b.ToTable("BranchOrderService");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.BranchPhone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AndFax");

                    b.Property<int>("Branch_Id");

                    b.Property<bool?>("Deleted");

                    b.Property<DateTimeOffset>("DeletedUtc");

                    b.Property<int?>("Extension");

                    b.Property<bool?>("IsCell");

                    b.Property<string>("Memo");

                    b.Property<string>("Number");

                    b.Property<bool?>("Sms");

                    b.HasKey("Id");

                    b.HasIndex("Branch_Id");

                    b.ToTable("BranchPhones");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("ActiveUtc");

                    b.Property<int>("Branch_Id");

                    b.Property<DateTimeOffset>("CancelledUtc");

                    b.Property<DateTimeOffset>("CreatedUtc");

                    b.Property<DateTimeOffset>("ExpiredUtc");

                    b.Property<int>("Plan_Id");

                    b.Property<int>("Status");

                    b.Property<int>("SubscriberCreditCard_Id");

                    b.HasKey("Id");

                    b.HasIndex("Branch_Id");

                    b.HasIndex("Plan_Id");

                    b.HasIndex("SubscriberCreditCard_Id");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.ContractItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("ActiveFromUtc");

                    b.Property<DateTimeOffset>("ActiveToUtc");

                    b.Property<int?>("ContractPeriodId");

                    b.Property<int>("Contract_Id");

                    b.Property<int?>("PlanId");

                    b.Property<int>("Plan_Id");

                    b.Property<string>("Response");

                    b.HasKey("Id");

                    b.HasIndex("ContractPeriodId");

                    b.HasIndex("Contract_Id");

                    b.HasIndex("PlanId");

                    b.ToTable("ContractItems");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.ContractPeriod", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("Discount");

                    b.Property<int>("Months");

                    b.HasKey("Id");

                    b.ToTable("ContractPeriods");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.ContractService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Charge");

                    b.Property<string>("Concept");

                    b.Property<int?>("ContractItem_Id");

                    b.Property<int>("Contract_Id");

                    b.Property<int>("Currency_Id");

                    b.Property<decimal>("Discount");

                    b.HasKey("Id");

                    b.HasIndex("ContractItem_Id");

                    b.HasIndex("Currency_Id");

                    b.ToTable("ContractServices");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Corner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<bool?>("Deleted");

                    b.Property<DateTimeOffset>("DeletedUtc");

                    b.Property<int>("DeliveryArea_Id");

                    b.Property<string>("Geo");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Place");

                    b.Property<string>("StreetAnd");

                    b.Property<string>("StreetOf");

                    b.Property<int>("Type");

                    b.Property<int>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryArea_Id");

                    b.HasIndex("Zip");

                    b.ToTable("Corners");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .IsRequired();

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.CreditCardBrand", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("CvcLength");

                    b.Property<string>("CvcName");

                    b.Property<string>("EagerPattern");

                    b.Property<string>("GroupPattern");

                    b.Property<string>("MaskArray");

                    b.Property<string>("Mnemonic");

                    b.Property<string>("Name");

                    b.Property<string>("Pattern");

                    b.Property<string>("TestNumber");

                    b.HasKey("Id");

                    b.ToTable("CreditCardBrands");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Cuisine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Branch_Id");

                    b.Property<bool?>("Deleted");

                    b.Property<DateTimeOffset>("DeletedUtc");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("Branch_Id");

                    b.ToTable("Cuisines");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Culture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Cultures");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("Name");

                    b.Property<string>("Short");

                    b.Property<string>("Symbol");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Customer", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<int>("Gender");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.CustomerAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apartment");

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<string>("Customer_Id")
                        .IsRequired();

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int?>("State_Id");

                    b.Property<string>("Street")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Customer_Id");

                    b.HasIndex("State_Id");

                    b.ToTable("CustomerAddresses");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.CustomerCreditCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("ActivatedUtc");

                    b.Property<string>("CCV");

                    b.Property<int>("CreditCardBrand_Id");

                    b.Property<string>("Customer_Id")
                        .IsRequired();

                    b.Property<DateTimeOffset>("ExpiredUtc");

                    b.Property<string>("Name");

                    b.Property<string>("Number")
                        .IsRequired();

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int>("Sequence");

                    b.Property<int?>("Status");

                    b.Property<string>("TokenId");

                    b.Property<int>("ValidThruMonth");

                    b.Property<int>("ValidThruYear");

                    b.HasKey("Id");

                    b.HasIndex("CreditCardBrand_Id");

                    b.HasIndex("Customer_Id");

                    b.ToTable("CustomerCreditCards");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.CustomerPhone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Customer_Id")
                        .IsRequired();

                    b.Property<bool?>("Deleted");

                    b.Property<DateTimeOffset>("DeletedUtc");

                    b.Property<int?>("Extension");

                    b.Property<bool>("IsCell");

                    b.Property<string>("Memo");

                    b.Property<string>("Number");

                    b.Property<bool>("Sms");

                    b.HasKey("Id");

                    b.HasIndex("Customer_Id");

                    b.ToTable("CustomerPhones");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.DeliveryArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Branch_Id");

                    b.Property<bool?>("Deleted");

                    b.Property<DateTimeOffset>("DeletedUtc");

                    b.Property<bool>("IsClosed");

                    b.HasKey("Id");

                    b.HasIndex("Branch_Id")
                        .IsUnique();

                    b.ToTable("DeliveryAreas");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Entities.ECustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Email");

                    b.Property<int>("Gender");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("ECustomers");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Entities.EOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("CustomerId");

                    b.Property<string>("CustomerId1");

                    b.Property<decimal>("Discount");

                    b.Property<int?>("ECustomerId");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId1");

                    b.HasIndex("ECustomerId");

                    b.ToTable("EOrders");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Entities.EOrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<decimal>("Discount");

                    b.Property<int?>("EOrderId");

                    b.Property<int>("OrderId");

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("UnitPrice");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("EOrderId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("EOrderDetails");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Favorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Customer_Id")
                        .IsRequired();

                    b.Property<string>("Description");

                    b.Property<byte[]>("Image");

                    b.Property<string>("ImageSource");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<float>("Sequence");

                    b.HasKey("Id");

                    b.HasIndex("Customer_Id");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.FavoritePresentation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Favorite_Id");

                    b.Property<decimal>("Price");

                    b.Property<string>("Size");

                    b.HasKey("Id");

                    b.HasIndex("Favorite_Id");

                    b.ToTable("FavoritePresentations");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int>("DisplayOrder");

                    b.Property<int>("Plan_Id");

                    b.HasKey("Id");

                    b.HasIndex("Plan_Id");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Franchise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerType");

                    b.Property<bool>("IsDirty");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid>("Subscriber_Id");

                    b.HasKey("Id");

                    b.HasIndex("Subscriber_Id");

                    b.ToTable("Franchises");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.FranchiseAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apartment");

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<int>("Franchise_Id");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int?>("State_Id");

                    b.Property<string>("Street")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Franchise_Id");

                    b.HasIndex("State_Id");

                    b.ToTable("FranchiseAddresses");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.FranchiseFax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Deleted");

                    b.Property<DateTimeOffset>("DeletedUtc");

                    b.Property<int>("Franchise_Id");

                    b.Property<string>("Number");

                    b.HasKey("Id");

                    b.HasIndex("Franchise_Id");

                    b.ToTable("FranchiseFaxes");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.FranchisePhone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AndFax");

                    b.Property<bool?>("Deleted");

                    b.Property<DateTimeOffset>("DeletedUtc");

                    b.Property<int?>("Extension");

                    b.Property<int>("Franchise_Id");

                    b.Property<string>("Memo");

                    b.Property<string>("Number");

                    b.HasKey("Id");

                    b.HasIndex("Franchise_Id");

                    b.ToTable("FranchisePhones");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Locale", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("CountryName");

                    b.Property<int>("Country_Id");

                    b.Property<string>("Language");

                    b.Property<string>("LocaleString");

                    b.HasKey("Id");

                    b.HasIndex("Country_Id");

                    b.ToTable("Locales");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Branch_Id");

                    b.Property<string>("Description");

                    b.Property<string>("Footnote");

                    b.Property<byte[]>("Image");

                    b.Property<string>("ImageSource");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<float>("Sequence");

                    b.HasKey("Id");

                    b.HasIndex("Branch_Id");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Footnote");

                    b.Property<byte[]>("Image");

                    b.Property<string>("ImageSource");

                    b.Property<int>("Menu_Id");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<float>("Sequence");

                    b.HasKey("Id");

                    b.HasIndex("Menu_Id");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.MenuItemPresentation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MenuItem_Id");

                    b.Property<decimal>("Price");

                    b.Property<string>("Size");

                    b.HasKey("Id");

                    b.HasIndex("MenuItem_Id");

                    b.ToTable("MenuItemPresentations");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.MenuPresentation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Menu_Id");

                    b.Property<decimal>("Price");

                    b.Property<string>("Size");

                    b.HasKey("Id");

                    b.HasIndex("Menu_Id");

                    b.ToTable("MenuPresentations");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<int>("Branch_Id");

                    b.Property<int?>("CurrencyId");

                    b.Property<bool?>("Deleted");

                    b.Property<DateTimeOffset>("DeletedUtc");

                    b.Property<string>("Description");

                    b.Property<byte[]>("Image");

                    b.Property<string>("ImageSource");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("OfferType_Id");

                    b.Property<double?>("Percentage");

                    b.Property<float>("Sequence");

                    b.HasKey("Id");

                    b.HasIndex("Branch_Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("OfferType_Id");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.OfferItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Deleted");

                    b.Property<DateTimeOffset>("DeletedUtc");

                    b.Property<string>("Description");

                    b.Property<byte[]>("Image");

                    b.Property<string>("ImageSource");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("Offer_Id");

                    b.Property<float>("Sequence");

                    b.HasKey("Id");

                    b.HasIndex("Offer_Id");

                    b.ToTable("OfferItems");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.OfferItemPresentation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OfferItem_Id");

                    b.Property<decimal>("Price");

                    b.Property<string>("Size");

                    b.HasKey("Id");

                    b.HasIndex("OfferItem_Id");

                    b.ToTable("OfferPresentations");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.OfferType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<byte[]>("Image");

                    b.Property<string>("ImageSource");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("OfferTypes");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Branch_Id");

                    b.Property<int?>("CustomerCreditCardId");

                    b.Property<string>("Customer_Id")
                        .IsRequired();

                    b.Property<bool>("Delivered");

                    b.Property<DateTimeOffset>("DeliveredUtc");

                    b.Property<string>("Name");

                    b.Property<bool>("Ordered");

                    b.Property<DateTimeOffset>("OrderedUtc");

                    b.Property<bool>("Prepped");

                    b.Property<DateTimeOffset>("PreppedUtc");

                    b.Property<bool>("Sent");

                    b.Property<DateTimeOffset>("SentUtc");

                    b.Property<float>("Sequence");

                    b.HasKey("Id");

                    b.HasIndex("Branch_Id");

                    b.HasIndex("CustomerCreditCardId");

                    b.HasIndex("Customer_Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<decimal>("Discount");

                    b.Property<int>("OrderId");

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("UnitPrice");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<byte[]>("Image");

                    b.Property<string>("ImageSource");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("Order_Id");

                    b.Property<double>("Quantity");

                    b.Property<float>("Sequence");

                    b.HasKey("Id");

                    b.HasIndex("Order_Id");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.OrderItemPresentation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderItem_Id");

                    b.Property<decimal>("Price");

                    b.Property<string>("Size");

                    b.HasKey("Id");

                    b.HasIndex("OrderItem_Id");

                    b.ToTable("OrderPresentations");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Branch_Id");

                    b.Property<decimal>("Charge");

                    b.Property<int>("Currency_Id");

                    b.Property<int>("DaysFree");

                    b.Property<string>("Description");

                    b.Property<decimal>("Discount");

                    b.Property<int?>("Franchise_Id");

                    b.Property<int>("FreeMonths");

                    b.Property<string>("Nickname");

                    b.Property<string>("PaymentSystemId");

                    b.Property<int>("Period_Id");

                    b.Property<float>("Price");

                    b.Property<decimal>("SetupCharge");

                    b.Property<int>("SetupDays");

                    b.Property<decimal>("SetupDiscount");

                    b.Property<int>("State");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<DateTimeOffset?>("ValidFromUtc");

                    b.Property<DateTimeOffset?>("ValidToUtc");

                    b.HasKey("Id");

                    b.HasIndex("Branch_Id");

                    b.HasIndex("Currency_Id");

                    b.HasIndex("Period_Id");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.PostalCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Branch_Id");

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<bool?>("Deleted");

                    b.Property<DateTimeOffset>("DeletedUtc");

                    b.Property<bool>("Valid");

                    b.HasKey("Id");

                    b.HasIndex("Branch_Id");

                    b.ToTable("PostalCodes");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.PredefinedSchedule", b =>
                {
                    b.Property<int>("Dow");

                    b.Property<bool?>("CloseOfTheNextDay");

                    b.Property<int?>("ClosesHour");

                    b.Property<int?>("ClosesMinute");

                    b.Property<int?>("Day");

                    b.Property<bool?>("Disable");

                    b.Property<int?>("Month");

                    b.Property<string>("Name");

                    b.Property<int?>("OpensHour");

                    b.Property<int?>("OpensMinute");

                    b.Property<bool?>("Optional");

                    b.Property<int?>("Service");

                    b.Property<int?>("Year");

                    b.HasKey("Dow");

                    b.ToTable("PredefinedSchedules");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BuyingPrice");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("Icon");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDiscontinued");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentId");

                    b.Property<int>("ProductCategoryId");

                    b.Property<decimal>("SellingPrice");

                    b.Property<int>("UnitsInStock");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("Icon");

                    b.Property<string>("Name");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CultureId");

                    b.Property<string>("Key");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CultureId");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Branch_Id");

                    b.Property<bool>("CloseOfTheNextDay");

                    b.Property<int?>("ClosesHour");

                    b.Property<int?>("ClosesMinute");

                    b.Property<short?>("Day");

                    b.Property<bool?>("Deleted");

                    b.Property<DateTimeOffset>("DeletedUtc");

                    b.Property<bool?>("Disable");

                    b.Property<int?>("Dow");

                    b.Property<int?>("Month");

                    b.Property<string>("Name");

                    b.Property<int?>("OpensHour");

                    b.Property<int?>("OpensMinute");

                    b.Property<bool?>("Optional");

                    b.Property<int>("Service");

                    b.Property<int?>("Year");

                    b.HasKey("Id");

                    b.HasIndex("Branch_Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Setup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Charge");

                    b.Property<decimal>("Discount");

                    b.Property<decimal>("Net");

                    b.Property<decimal>("Prepaid");

                    b.Property<int>("ServiceLevel");

                    b.HasKey("Id");

                    b.ToTable("Setups");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Side", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CornerFromId");

                    b.Property<int?>("CornerToId");

                    b.Property<int>("DeliveryArea_Id");

                    b.HasKey("Id");

                    b.HasIndex("CornerFromId");

                    b.HasIndex("CornerToId");

                    b.HasIndex("DeliveryArea_Id");

                    b.ToTable("Sides");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .IsRequired();

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<int>("Country_Id");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Country_Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Subscriber", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("DataEventRecordsRole");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FirstName")
                        .HasMaxLength(250);

                    b.Property<int>("Gender");

                    b.Property<byte[]>("Image");

                    b.Property<string>("ImageSource");

                    b.Property<bool>("IsAdmin");

                    b.Property<bool>("IsEnabled");

                    b.Property<string>("L4DSSN")
                        .HasMaxLength(4);

                    b.Property<string>("LastName")
                        .HasMaxLength(250);

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("MiddleName");

                    b.Property<string>("Mobile");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PaymentSystemId");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecuredFilesRole");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.Property<string>("Website");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.SubscriberAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apartment");

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int?>("State_Id");

                    b.Property<string>("Street")
                        .IsRequired();

                    b.Property<Guid>("Subscriber_Id");

                    b.HasKey("Id");

                    b.HasIndex("State_Id");

                    b.HasIndex("Subscriber_Id")
                        .IsUnique();

                    b.ToTable("SubscriberAddresses");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.SubscriberCreditCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("ActivatedUtc");

                    b.Property<string>("CCV");

                    b.Property<int>("CreditCardBrand_Id");

                    b.Property<bool?>("Deleted");

                    b.Property<DateTimeOffset>("DeletedUtc");

                    b.Property<DateTimeOffset>("ExpiredUtc");

                    b.Property<string>("Name");

                    b.Property<string>("Number");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int>("Sequence");

                    b.Property<int?>("Status");

                    b.Property<Guid>("Subscriber_Id");

                    b.Property<string>("TokenId");

                    b.Property<int>("ValidThruMonth");

                    b.Property<int>("ValidThruYear");

                    b.HasKey("Id");

                    b.HasIndex("CreditCardBrand_Id");

                    b.HasIndex("Subscriber_Id");

                    b.ToTable("SubscriberCreditCards");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.SubscriberFax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted");

                    b.Property<DateTimeOffset>("DeletedUtc");

                    b.Property<string>("Number");

                    b.Property<Guid>("Subscriber_Id");

                    b.HasKey("Id");

                    b.HasIndex("Subscriber_Id")
                        .IsUnique();

                    b.ToTable("SubscriberFaxes");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.SubscriberPhone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Deleted");

                    b.Property<DateTimeOffset>("DeletedUtc");

                    b.Property<int?>("Extension");

                    b.Property<string>("Memo");

                    b.Property<string>("Number");

                    b.Property<Guid>("Subscriber_Id");

                    b.HasKey("Id");

                    b.HasIndex("Subscriber_Id");

                    b.ToTable("SubscriberPhones");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EntryTime");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.WebsiteName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Branch_Id");

                    b.Property<bool?>("Deleted");

                    b.Property<DateTimeOffset>("DeletedUtc");

                    b.Property<string>("Domain");

                    b.Property<string>("Suffix");

                    b.HasKey("Id");

                    b.HasIndex("Branch_Id");

                    b.ToTable("WebsiteNames");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.ZipCode", b =>
                {
                    b.Property<int>("Zip");

                    b.Property<double>("Area");

                    b.Property<string>("Geometry");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Name");

                    b.Property<int>("PopulationAt2001");

                    b.Property<int>("State_Id");

                    b.Property<int>("Sumblkpop");

                    b.HasKey("Zip");

                    b.HasIndex("State_Id");

                    b.ToTable("ZipCodes");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Subscriber")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Subscriber")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ZoEazy.Api.Model.Subscriber")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Subscriber")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Branch", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Franchise", "Franchise")
                        .WithMany("Branches")
                        .HasForeignKey("Franchise_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.BranchAddress", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Branch", "Branch")
                        .WithOne("Address")
                        .HasForeignKey("ZoEazy.Api.Model.BranchAddress", "Branch_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ZoEazy.Api.Model.State", "State")
                        .WithMany()
                        .HasForeignKey("State_Id");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.BranchFax", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Branch", "Branch")
                        .WithMany("Faxes")
                        .HasForeignKey("Branch_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.BranchOrder", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Branch", "Branch")
                        .WithMany("Orders")
                        .HasForeignKey("Branch_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ZoEazy.Api.Model.SubscriberCreditCard", "CreditCard")
                        .WithMany("Orders")
                        .HasForeignKey("SubscriberCreditCard_Id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.BranchOrderItem", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.BranchOrder", "BranchOrder")
                        .WithOne("Item")
                        .HasForeignKey("ZoEazy.Api.Model.BranchOrderItem", "BranchOrder_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ZoEazy.Api.Model.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("Currency_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ZoEazy.Api.Model.ContractPeriod", "Period")
                        .WithMany()
                        .HasForeignKey("Period_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ZoEazy.Api.Model.Plan", "Plan")
                        .WithMany()
                        .HasForeignKey("Plan_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.BranchOrderService", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.BranchOrder", "BranchOrder")
                        .WithMany("Services")
                        .HasForeignKey("BranchOrder_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ZoEazy.Api.Model.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("Currency_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ZoEazy.Api.Model.Plan", "Plan")
                        .WithMany()
                        .HasForeignKey("Plan_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.BranchPhone", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Branch", "Branch")
                        .WithMany("Phones")
                        .HasForeignKey("Branch_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Contract", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Branch", "Branch")
                        .WithMany("Contracts")
                        .HasForeignKey("Branch_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ZoEazy.Api.Model.Plan", "Plan")
                        .WithMany()
                        .HasForeignKey("Plan_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ZoEazy.Api.Model.SubscriberCreditCard", "CreditCard")
                        .WithMany("Contracts")
                        .HasForeignKey("SubscriberCreditCard_Id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.ContractItem", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.ContractPeriod")
                        .WithMany("ContractItems")
                        .HasForeignKey("ContractPeriodId");

                    b.HasOne("ZoEazy.Api.Model.Contract", "Contract")
                        .WithMany("Items")
                        .HasForeignKey("Contract_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ZoEazy.Api.Model.Plan", "Plan")
                        .WithMany()
                        .HasForeignKey("PlanId");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.ContractService", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.ContractItem", "ContractItem")
                        .WithMany("Services")
                        .HasForeignKey("ContractItem_Id");

                    b.HasOne("ZoEazy.Api.Model.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("Currency_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Corner", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.DeliveryArea", "DeliveryArea")
                        .WithMany("Corners")
                        .HasForeignKey("DeliveryArea_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ZoEazy.Api.Model.ZipCode", "PostalCode")
                        .WithMany()
                        .HasForeignKey("Zip")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Cuisine", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Branch", "Branch")
                        .WithMany("Cuisines")
                        .HasForeignKey("Branch_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.CustomerAddress", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("Customer_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ZoEazy.Api.Model.State", "State")
                        .WithMany()
                        .HasForeignKey("State_Id");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.CustomerCreditCard", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.CreditCardBrand", "Brand")
                        .WithMany()
                        .HasForeignKey("CreditCardBrand_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ZoEazy.Api.Model.Customer", "Customer")
                        .WithMany("CreditCards")
                        .HasForeignKey("Customer_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.CustomerPhone", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Customer", "Customer")
                        .WithMany("Phones")
                        .HasForeignKey("Customer_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.DeliveryArea", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Branch", "Branch")
                        .WithOne("DeliveryArea")
                        .HasForeignKey("ZoEazy.Api.Model.DeliveryArea", "Branch_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Entities.EOrder", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId1");

                    b.HasOne("ZoEazy.Api.Model.Entities.ECustomer")
                        .WithMany("EOrders")
                        .HasForeignKey("ECustomerId");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Entities.EOrderDetail", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Entities.EOrder")
                        .WithMany("EOrderDetails")
                        .HasForeignKey("EOrderId");

                    b.HasOne("ZoEazy.Api.Model.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ZoEazy.Api.Model.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Favorite", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Customer", "Customer")
                        .WithMany("Favorites")
                        .HasForeignKey("Customer_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.FavoritePresentation", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Favorite", "Favorite")
                        .WithMany("FavoritePresentation")
                        .HasForeignKey("Favorite_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Feature", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Plan", "Plan")
                        .WithMany("Features")
                        .HasForeignKey("Plan_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Franchise", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Subscriber", "Subscriber")
                        .WithMany("Franchises")
                        .HasForeignKey("Subscriber_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.FranchiseAddress", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Franchise", "Franchise")
                        .WithMany("Addresses")
                        .HasForeignKey("Franchise_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ZoEazy.Api.Model.State", "State")
                        .WithMany()
                        .HasForeignKey("State_Id");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.FranchiseFax", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Franchise", "Franchise")
                        .WithMany("Faxes")
                        .HasForeignKey("Franchise_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.FranchisePhone", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Franchise", "Franchise")
                        .WithMany("Phones")
                        .HasForeignKey("Franchise_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Locale", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Country", "Country")
                        .WithMany()
                        .HasForeignKey("Country_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Menu", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Branch", "Branch")
                        .WithMany("Menus")
                        .HasForeignKey("Branch_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.MenuItem", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Menu", "Menu")
                        .WithMany("Items")
                        .HasForeignKey("Menu_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.MenuItemPresentation", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.MenuItem", "MenuItem")
                        .WithMany("Presentations")
                        .HasForeignKey("MenuItem_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.MenuPresentation", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Menu", "Menu")
                        .WithMany("Presentations")
                        .HasForeignKey("Menu_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Offer", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Branch", "Branch")
                        .WithMany("Offers")
                        .HasForeignKey("Branch_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ZoEazy.Api.Model.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("ZoEazy.Api.Model.OfferType", "OfferType")
                        .WithMany("Offers")
                        .HasForeignKey("OfferType_Id");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.OfferItem", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Offer", "Offer")
                        .WithMany("Items")
                        .HasForeignKey("Offer_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.OfferItemPresentation", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.OfferItem", "OfferItem")
                        .WithMany("OfferItemPresentations")
                        .HasForeignKey("OfferItem_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Order", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("Branch_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ZoEazy.Api.Model.CustomerCreditCard")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerCreditCardId");

                    b.HasOne("ZoEazy.Api.Model.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("Customer_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.OrderDetail", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ZoEazy.Api.Model.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.OrderItem", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("Order_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.OrderItemPresentation", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.OrderItem", "OrderItem")
                        .WithMany("Presentations")
                        .HasForeignKey("OrderItem_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Plan", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("Branch_Id");

                    b.HasOne("ZoEazy.Api.Model.Franchise", "Franchise")
                        .WithMany()
                        .HasForeignKey("Branch_Id");

                    b.HasOne("ZoEazy.Api.Model.Currency", "Currency")
                        .WithMany("Plans")
                        .HasForeignKey("Currency_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ZoEazy.Api.Model.ContractPeriod", "Period")
                        .WithMany("Plans")
                        .HasForeignKey("Period_Id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.PostalCode", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Branch", "Branch")
                        .WithMany("PostalCodes")
                        .HasForeignKey("Branch_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Product", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Product", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.HasOne("ZoEazy.Api.Model.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Resource", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Culture", "Culture")
                        .WithMany("Resources")
                        .HasForeignKey("CultureId");
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Schedule", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Branch", "Branch")
                        .WithMany("Schedules")
                        .HasForeignKey("Branch_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Side", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Corner", "CornerFrom")
                        .WithMany()
                        .HasForeignKey("CornerFromId");

                    b.HasOne("ZoEazy.Api.Model.Corner", "CornerTo")
                        .WithMany()
                        .HasForeignKey("CornerToId");

                    b.HasOne("ZoEazy.Api.Model.DeliveryArea", "DeliveryArea")
                        .WithMany("Sides")
                        .HasForeignKey("DeliveryArea_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.State", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Country", "Country")
                        .WithMany("States")
                        .HasForeignKey("Country_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.Subscriber", b =>
                {
                    b.OwnsOne("ZoEazy.Api.Model.Flag", "Suspended", b1 =>
                        {
                            b1.Property<Guid>("SubscriberId");

                            b1.Property<bool>("Value");

                            b1.Property<DateTimeOffset?>("setAtUtc");

                            b1.HasKey("SubscriberId");

                            b1.ToTable("AspNetUsers");

                            b1.HasOne("ZoEazy.Api.Model.Subscriber")
                                .WithOne("Suspended")
                                .HasForeignKey("ZoEazy.Api.Model.Flag", "SubscriberId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("ZoEazy.Api.Model.ZeDate", "DateOfBirth", b1 =>
                        {
                            b1.Property<Guid>("SubscriberId");

                            b1.Property<int>("Day");

                            b1.Property<int>("Month");

                            b1.Property<int>("Year");

                            b1.HasKey("SubscriberId");

                            b1.ToTable("AspNetUsers");

                            b1.HasOne("ZoEazy.Api.Model.Subscriber")
                                .WithOne("DateOfBirth")
                                .HasForeignKey("ZoEazy.Api.Model.ZeDate", "SubscriberId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("ZoEazy.Api.Model.SubscriberAddress", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.State", "State")
                        .WithMany()
                        .HasForeignKey("State_Id");

                    b.HasOne("ZoEazy.Api.Model.Subscriber", "Subscriber")
                        .WithOne("Address")
                        .HasForeignKey("ZoEazy.Api.Model.SubscriberAddress", "Subscriber_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.SubscriberCreditCard", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.CreditCardBrand", "Brand")
                        .WithMany()
                        .HasForeignKey("CreditCardBrand_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ZoEazy.Api.Model.Subscriber", "Subscriber")
                        .WithMany("CreditCards")
                        .HasForeignKey("Subscriber_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.SubscriberFax", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Subscriber", "Subscriber")
                        .WithOne("Fax")
                        .HasForeignKey("ZoEazy.Api.Model.SubscriberFax", "Subscriber_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.SubscriberPhone", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Subscriber", "Subscriber")
                        .WithMany("Phones")
                        .HasForeignKey("Subscriber_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.WebsiteName", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.Branch", "Branch")
                        .WithMany("Websites")
                        .HasForeignKey("Branch_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ZoEazy.Api.Model.ZipCode", b =>
                {
                    b.HasOne("ZoEazy.Api.Model.State", "State")
                        .WithMany()
                        .HasForeignKey("State_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
